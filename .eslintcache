[{"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\index.js":"1","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\App.js":"2","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\reportWebVitals.js":"3","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\HelloWorld.js":"4","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\CaptionImage.js":"5","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\Blink.js":"6","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\CaptionImageList.js":"7","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\BoardList.js":"8","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\Home.js":"9","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\WriteBoard.js":"10","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\BoardEdit.js":"11","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\BoardDetail.js":"12","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\MyNavbar.js":"13","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\Comment.js":"14","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\CarList.js":"15","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\CarDetail.js":"16","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\CheckListWrite.js":"17","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\lib\\web3.js":"18"},{"size":671,"mtime":1609325871257,"results":"19","hashOfConfig":"20"},{"size":1450,"mtime":1609757121991,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":290,"mtime":1609243749151,"results":"23","hashOfConfig":"20"},{"size":211,"mtime":1609247566226,"results":"24","hashOfConfig":"20"},{"size":542,"mtime":1609246933951,"results":"25","hashOfConfig":"20"},{"size":1268,"mtime":1609248289888,"results":"26","hashOfConfig":"20"},{"size":1745,"mtime":1609410705689,"results":"27","hashOfConfig":"20"},{"size":1542,"mtime":1609326658803,"results":"28","hashOfConfig":"20"},{"size":1785,"mtime":1609332211002,"results":"29","hashOfConfig":"20"},{"size":2220,"mtime":1609335166446,"results":"30","hashOfConfig":"20"},{"size":3968,"mtime":1609601278337,"results":"31","hashOfConfig":"20"},{"size":781,"mtime":1609751628826,"results":"32","hashOfConfig":"20"},{"size":1614,"mtime":1609414900888,"results":"33","hashOfConfig":"20"},{"size":1533,"mtime":1609752993150,"results":"34","hashOfConfig":"20"},{"size":2446,"mtime":1609762867343,"results":"35","hashOfConfig":"20"},{"size":5457,"mtime":1609765703051,"results":"36","hashOfConfig":"20"},{"size":478,"mtime":1609764534007,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"404kuc",{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\index.js",[],["82","83"],"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\App.js",["84","85","86","87","88","89"],"import logo from './logo.svg';\nimport './App.css';\nimport HelloWorld from'./components/HelloWorld';\nimport CaptionImage from './components/CaptionImage';\nimport Blink from './components/Blink';\nimport CaptionImageList from './components/CaptionImageList';\n\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'; \n\n// PAGE import\nimport Home from './pages/Home';\nimport BoardList from './pages/BoardList';\nimport WriteBoard from './pages/WriteBoard';\nimport BoardDetail from './pages/BoardDetail';\nimport BoardEdit from './pages/BoardEdit';\nimport CheckListWrite from './pages/CheckListWrite';\n\nimport CarList from './pages/CarList';\nimport CarDetail from './pages/CarDetail';\nimport MyNavbar from './components/MyNavbar';\n\nfunction App() {\n  return (\n\n    <Router>\n      \n      <MyNavbar />\n      \n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/board/write' exact component={WriteBoard} />\n        <Route path='/board' exact component={BoardList} />\n        <Route path='/board/:boardId/edit' exact component={BoardEdit} />\n        <Route path='/board/:boardId' exact component={BoardDetail} />\n\n        {/* CarList */}\n        <Route path='/car' exact component={CarList} />\n        <Route path='/car/:carId' exact component={CarDetail} />\n        <Route path='/car/:carId/checklistWrite' exact component={CheckListWrite} />\n\n\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\reportWebVitals.js",[],"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\HelloWorld.js",[],"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\CaptionImage.js",[],"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\Blink.js",[],"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\CaptionImageList.js",[],"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\BoardList.js",["90"],"import React from 'react';\r\nimport {Container, Row, Col, ListGroup, Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function BoardList(props){\r\n  const [boardList, setBoardList] = React.useState([]);\r\n  React.useEffect(()=>{\r\n    fetch('/api/board', {\r\n      method: 'GET'\r\n    }).then(response=>{\r\n      return response.json();\r\n    }).then(data=>{\r\n      if (data.status === 'Error'){\r\n        alert(data.result)\r\n      } else{\r\n        setBoardList(data.result);\r\n      }\r\n    })\r\n  }, [])\r\n  // 요구사항: 게시물 클릭시 게시물 상세페이지(BoardDetail)로 이동.\r\n  // [2가지 방법]\r\n  // 방법1. <Link/> Component 이용\r\n  // 방법2. histroy 객체 사용\r\n\r\n  return (\r\n    <Container style={{paddingTop: 60}}>\r\n      <Row>\r\n        <Col>\r\n          <h2 style={{float:'left'}}>게시판 목록</h2>\r\n          <Button style={{float:'right'}} onClick={()=>{\r\n            props.history.push('/board/write');\r\n          }}>글 쓰기</Button>\r\n        </Col>\r\n\r\n      </Row>\r\n      <Row style={{paddingTop:60}}>\r\n        <Col>\r\n          <ListGroup>\r\n            {boardList.map(board=>{\r\n              // 방법1.\r\n              // return (\r\n              //   <Link to={`/board/${board.id}`}>\r\n              //     <ListGroup.Item>{board.title}</ListGroup.Item>\r\n              //   </Link>\r\n              // )\r\n              // 방법2. hitory객체 사용.\r\n              return(\r\n                <ListGroup.Item onClick={(e)=>{\r\n                  props.history.push(`/board/${board.id}`);\r\n                }}>{board.title}</ListGroup.Item>\r\n              )\r\n            })}\r\n            \r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n      \r\n    </Container>\r\n  )\r\n}","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\Home.js",[],"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\WriteBoard.js",["91"],"import React from 'react';\r\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap';\r\n\r\nexport default function WriteBoard(props){\r\n  const [writeForm, setWriteForm] = React.useState({\r\n    title: '',\r\n    content: ''\r\n  }) \r\n  const submitWriteForm = React.useCallback(function(writeForm){\r\n    fetch('/api/board', {\r\n      method: 'POST',\r\n      headers:{\r\n        'CONTENT-TYPE': 'application/json'\r\n      },\r\n      body: JSON.stringify(writeForm)\r\n    }).then(response=>{\r\n      return response.json();\r\n    }).then(data=>{\r\n      if (data.status === 'Success'){\r\n        alert(\"등록되었습니다.\");\r\n        props.history.push('/board');\r\n      } else{\r\n        alert(data.result);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Container style={{paddingTop: 60}}>\r\n      <Row>\r\n        <Col>\r\n          <h2>글 쓰기</h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{paddingTop: 60}}>\r\n        <Col>\r\n          <Form.Group>\r\n            <Form.Label>제목</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"제목\" value={writeForm.title} onChange={(e)=>{\r\n              setWriteForm({\r\n                ...writeForm,\r\n                title: e.target.value\r\n              })\r\n            }} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>내용</Form.Label>\r\n            <Form.Control type=\"text\" as=\"textarea\" rows=\"10\" value={writeForm.content} onChange={(e)=>{\r\n              setWriteForm({\r\n                ...writeForm,\r\n                content: e.target.value\r\n              })\r\n            }} />\r\n          </Form.Group>\r\n          <Button style={{float:'right'}} onClick={(e)=>{\r\n            submitWriteForm(writeForm);\r\n          }}>제출</Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\BoardEdit.js",["92","93"],"import React from 'react';\r\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap';\r\n\r\n\r\nexport default function BoardEdit(props){\r\n  const {boardId} = props.match.params;\r\n  const [editForm, setEditForm] = React.useState({\r\n    title: '', \r\n    content:''\r\n  });\r\n\r\n  React.useEffect(()=>{\r\n    fetch(`/api/board/${boardId}`, {\r\n      method: \"GET\"\r\n    }).then(response => {\r\n      return response.json();\r\n    }).then(data=>{\r\n      if (data.status==='Success'){\r\n        setEditForm(data.result)\r\n      } else{\r\n        alert(data.result);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  // fetch (수정 구현하기 - PUT 메소드로 요청 보내기)\r\n  const submitEditForm = React.useCallback((editForm)=>{\r\n    fetch(`/api/board/${boardId}`, {\r\n      method: \"PUT\",\r\n      headers:{\r\n        'CONTENT-TYPE': 'application/json'\r\n      },\r\n      body: JSON.stringify(editForm)\r\n    }).then(response=>{\r\n      return response.json();\r\n    }).then(data=>{\r\n      if (data.status === 'Success'){\r\n        alert(\"수정이 완료 되었습니다.\")\r\n        props.history.push(`/board/${boardId}`);\r\n      } else{\r\n        alert(data.result);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Container style={{paddingTop: 60}}>\r\n      <Row>\r\n        <Col>\r\n          <h2>글 수정</h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{paddingTop: 60}}>\r\n        <Col>\r\n          <Form.Group>\r\n            <Form.Label>제목</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"제목\" value={editForm.title} onChange={(e)=>{\r\n              setEditForm({\r\n                ...editForm,\r\n                title: e.target.value\r\n              })\r\n            }} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>내용</Form.Label>\r\n            <Form.Control type=\"text\" as=\"textarea\" rows=\"10\" value={editForm.content} onChange={(e)=>{\r\n              setEditForm({\r\n                ...editForm,\r\n                content: e.target.value\r\n              })\r\n            }} />\r\n          </Form.Group>\r\n          <Button style={{float:'right'}} onClick={(e)=>{\r\n            submitEditForm(editForm);\r\n          }}>제출</Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\BoardDetail.js",["94","95","96"],"import React from 'react';\r\nimport {Container, Row, Col, Button, ButtonGroup} from 'react-bootstrap';\r\n\r\nimport Comment from '../components/Comment';\r\n\r\n\r\nexport default function BoarDetail(props){\r\n  const {boardId} = props.match.params;\r\n  const [boardInfo, setBoardInfo] = React.useState({\r\n    id: '',\r\n    title: '', \r\n    content: ''\r\n  })\r\n  const [boardCommentList, setBoardCommentList] = React.useState([])\r\n  const [reqCount, setReqCount] = React.useState(0);\r\n\r\n  React.useEffect(()=>{\r\n    fetch(`/api/board/${boardId}`, {\r\n      method: \"GET\"\r\n    }).then(response=>{\r\n      return response.json();\r\n    }).then(data=>{\r\n      if(data.status === 'Success'){\r\n        setBoardInfo(data.result)\r\n      } else{\r\n        alert(data.result)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  React.useEffect(()=>{\r\n    fetch(`/api/board/${boardId}/comment`, {\r\n      method: \"GET\",\r\n    }).then(response=>{\r\n      return response.json();\r\n    }).then(data=>{\r\n      if(data.status === 'Success'){\r\n        setBoardCommentList(data.result);\r\n      } else{\r\n        alert(data.result);\r\n      }\r\n    })\r\n  }, [reqCount])\r\n\r\n  // 1. Comment POST요청 함수만들기\r\n  const submitComment = React.useCallback((commentContent)=>{\r\n    fetch(`/api/board/${boardId}/comment`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"CONTENT-TYPE\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(commentContent)\r\n    }).then(response=>{\r\n      return response.json()\r\n    }).then(data=>{\r\n      if(data.status === 'Success'){\r\n        setReqCount(reqCount+1)\r\n      } else{\r\n        alert(data.result);\r\n      }\r\n    })\r\n  }, [boardId, reqCount])\r\n  // 2. Comment 컴포넌트에 함수 전달하기(PROPS)\r\n  // 3. Comment 컴포넌트에서 함수 받아서 사용하기.\r\n\r\n\r\n  // --------------------------------------------------\r\n  // - Comment 삭제 함수 만드시고, 기능을 구현하세요.\r\n  const deleteComment = React.useCallback((commentId)=>{\r\n    if(! window.confirm(\"정말 삭제하시겠습니까?\")){\r\n      return \r\n    }\r\n    fetch(`/api/board/comment/${commentId}`, {\r\n      method: 'DELETE'\r\n    }).then(response=>{\r\n      return response.json();\r\n    }).then(data=>{\r\n      if(data.status === 'Success'){\r\n        setReqCount(reqCount+1)\r\n      } else{\r\n        alert(data.result)\r\n      }\r\n    })\r\n  }, [reqCount])\r\n  \r\n\r\n\r\n\r\n  // 삭제 함수 구현.\r\n  // ==> 삭제버튼 클릭시 삭제가 되도록 구현하시오.\r\n  const deleteBoard = React.useCallback(()=>{\r\n    if(window.confirm(\"정말 삭제하시겠습니까?\")){\r\n      fetch(`/api/board/${boardId}`, {\r\n        method: \"DELETE\"\r\n      }).then(response=>{\r\n        return response.json();\r\n      }).then(data=>{\r\n        if (data.status === 'Success'){\r\n          props.history.push('/board');\r\n        } else{\r\n          alert(data.result)\r\n        }\r\n      })\r\n    }\r\n\r\n  }, [boardId])\r\n\r\n  return (\r\n    <Container style={{paddingTop: 60}}>\r\n      <Row>\r\n        <Col>\r\n          <h2>글 상세보기</h2>\r\n        </Col>\r\n      </Row>\r\n      <Row style={{paddingTop:30}}>\r\n        <Col>\r\n          <ButtonGroup style={{float:'right'}}>\r\n            <Button variant=\"info\" onClick={()=>{\r\n              props.history.push(`/board/${boardId}/edit`);\r\n            }}>수정</Button>\r\n            <Button variant=\"danger\" onClick={()=>{\r\n              deleteBoard()\r\n            }}>삭제</Button>\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{paddingTop: 60}}>\r\n        <Col>\r\n          <div>\r\n            <h3>{boardInfo.title}</h3>\r\n          </div>\r\n          <div style={{padding:10, marginTop: 40, border:\"1px solid #e9e9e9\", minHeight:300}}>\r\n            {boardInfo.content}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      \r\n      <Row style={{paddingTop: 40}}>\r\n        <Comment boardId={boardId} commentList={boardCommentList} submitComment={submitComment} deleteComment={deleteComment} />\r\n      </Row>\r\n\r\n    </Container>\r\n  )\r\n}","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\MyNavbar.js",[],"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\components\\Comment.js",["97","98","99"],"import React from 'react';\r\nimport {ListGroup, Form, Row, Col, Container, Button } from 'react-bootstrap';\r\n\r\nexport default function Comment(props){\r\n  const {boardId, commentList, submitComment, deleteComment} = props;\r\n  const [inputComment, setInputComment] = React.useState(\"\");\r\n  console.log(commentList)\r\n\r\n  // 1. commentList를 반복해서 rendering\r\n  // 2. 댓글 입력시 서버에 POST요청.\r\n  // 3. 댓글 삭제시 서버에 DELETE요청.\r\n\r\n  return(\r\n    <>\r\n      <div style={{width: '100%'}}>\r\n        <Col>\r\n          <div>\r\n            {/* 댓글 입력창 */}\r\n            <Form.Control type=\"text\" value={inputComment} onChange={(e)=>{\r\n              setInputComment(e.target.value);\r\n            }} />\r\n          </div>\r\n          <Button style={{float: 'right'}} onClick={()=>{\r\n            submitComment({content:inputComment});\r\n            setInputComment(\"\");\r\n          }}>댓글</Button>\r\n        </Col>\r\n      </div>\r\n      <div style={{width:'100%', paddingTop:50}}>\r\n        <Col>\r\n          <ListGroup>\r\n            {commentList.map(comment=>{\r\n              return (\r\n              <ListGroup.Item>\r\n                <div style={{float:'left'}}>\r\n                  {comment.content}\r\n                </div>\r\n                <div style={{float:'right'}}>\r\n                  <Button variant=\"danger\" onClick={(e)=>{\r\n                    deleteComment(comment.id)\r\n                  }}>삭제</Button>\r\n                </div>\r\n              </ListGroup.Item>\r\n              )\r\n            })}\r\n            \r\n          </ListGroup>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  )\r\n}","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\CarList.js",[],"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\CarDetail.js",["100"],"import React from 'react';\r\nimport {Container, Row, Col, ButtonGroup, Button, Table} from 'react-bootstrap';\r\n\r\nexport default function CarDetail(props){\r\n  const carId = props.match.params.carId;\r\n  const [carInfo, setCarInfo] = React.useState({\r\n    id: '',\r\n    car_no: '',\r\n    car_type: '',\r\n    car_birth: ''\r\n  });\r\n  const [carCheckList, setCarCheckList] = React.useState([]);\r\n\r\n  React.useEffect(()=>{\r\n    fetch(`/api/bussafe/car/${carId}`, {\r\n      method: 'GET',\r\n    }).then(response=>{\r\n      return response.json();\r\n    }).then(data=>{\r\n      if (data.status === 'Success'){\r\n        setCarInfo(data.result);\r\n      }\r\n    })\r\n  }, [carId]);\r\n\r\n  React.useEffect(()=>{\r\n    fetch(`/api/bussafe/checklist/${carInfo.car_no}`, {\r\n      method: 'GET'\r\n    }).then(response=>{\r\n      return response.json();\r\n    }).then(data=>{\r\n      if(data.status === 'Success'){\r\n        setCarCheckList(data.result)\r\n      }\r\n    })\r\n  }, [carInfo])\r\n\r\n  return (\r\n    <Container style={{paddingTop: 60}}>\r\n      <Row>\r\n        <Col>\r\n          <h2>버스 상세페이지</h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{paddingTop: 30}}>\r\n        <Col>\r\n          <Button onClick={()=>{\r\n            props.history.push(`/car/${carInfo.car_no}/checklistWrite`);\r\n          }}>체크리스트 기록</Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row style={{paddingTop: 60}}>\r\n        <Col>\r\n          <div>\r\n            <h3>{carInfo.car_no}</h3>\r\n          </div>\r\n          <div style={{padding:10, marginTop: 40, border:\"1px solid #e9e9e9\", minHeight:300}}>\r\n            <ul>\r\n              <li>{carInfo.car_birth}</li>\r\n              <li>{carInfo.car_type}</li>\r\n            </ul>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>checker</th>\r\n                <th>차No</th>\r\n                <th>결과</th>\r\n                <th>timestamp</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {carCheckList.map(elem=>{\r\n                return (\r\n                  <tr>\r\n                    <td>{elem[0]}</td>\r\n                    <td>{elem[1]}</td>\r\n                    <td>{elem[2]}</td>\r\n                    <td>{elem[3]}</td>\r\n                  </tr>\r\n                )\r\n              })}\r\n\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}","C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\pages\\CheckListWrite.js",["101"],"C:\\Users\\user\\betweak\\lectures\\inje\\react-board\\src\\lib\\web3.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":12},{"ruleId":"106","severity":1,"message":"110","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":18},{"ruleId":"106","severity":1,"message":"111","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":20},{"ruleId":"106","severity":1,"message":"112","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":13},{"ruleId":"106","severity":1,"message":"113","line":6,"column":8,"nodeType":"108","messageId":"109","endLine":6,"endColumn":24},{"ruleId":"106","severity":1,"message":"114","line":8,"column":49,"nodeType":"108","messageId":"109","endLine":8,"endColumn":53},{"ruleId":"106","severity":1,"message":"114","line":3,"column":9,"nodeType":"108","messageId":"109","endLine":3,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":26,"column":6,"nodeType":"117","endLine":26,"endColumn":8,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":24,"column":6,"nodeType":"117","endLine":24,"endColumn":8,"suggestions":"120"},{"ruleId":"115","severity":1,"message":"121","line":44,"column":6,"nodeType":"117","endLine":44,"endColumn":8,"suggestions":"122"},{"ruleId":"115","severity":1,"message":"119","line":29,"column":6,"nodeType":"117","endLine":29,"endColumn":8,"suggestions":"123"},{"ruleId":"115","severity":1,"message":"119","line":43,"column":6,"nodeType":"117","endLine":43,"endColumn":16,"suggestions":"124"},{"ruleId":"115","severity":1,"message":"116","line":106,"column":6,"nodeType":"117","endLine":106,"endColumn":15,"suggestions":"125"},{"ruleId":"106","severity":1,"message":"126","line":2,"column":26,"nodeType":"108","messageId":"109","endLine":2,"endColumn":29},{"ruleId":"106","severity":1,"message":"127","line":2,"column":36,"nodeType":"108","messageId":"109","endLine":2,"endColumn":45},{"ruleId":"106","severity":1,"message":"128","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":17},{"ruleId":"106","severity":1,"message":"129","line":2,"column":30,"nodeType":"108","messageId":"109","endLine":2,"endColumn":41},{"ruleId":"115","severity":1,"message":"116","line":87,"column":6,"nodeType":"117","endLine":87,"endColumn":13,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'HelloWorld' is defined but never used.","'CaptionImage' is defined but never used.","'Blink' is defined but never used.","'CaptionImageList' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["133"],"React Hook React.useEffect has a missing dependency: 'boardId'. Either include it or remove the dependency array.",["134"],"React Hook React.useCallback has missing dependencies: 'boardId' and 'props.history'. Either include them or remove the dependency array.",["135"],["136"],["137"],["138"],"'Row' is defined but never used.","'Container' is defined but never used.","'boardId' is assigned a value but never used.","'ButtonGroup' is defined but never used.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"142","fix":"146"},{"desc":"147","fix":"148"},{"desc":"144","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [props.history]",{"range":"152","text":"153"},"Update the dependencies array to be: [boardId]",{"range":"154","text":"155"},"Update the dependencies array to be: [boardId, props.history]",{"range":"156","text":"157"},{"range":"158","text":"155"},"Update the dependencies array to be: [boardId, reqCount]",{"range":"159","text":"160"},{"range":"161","text":"157"},"Update the dependencies array to be: [carNo, props.history]",{"range":"162","text":"163"},[711,713],"[props.history]",[578,580],"[boardId]",[1116,1118],"[boardId, props.history]",[772,774],[1096,1106],"[boardId, reqCount]",[2681,2690],[2363,2370],"[carNo, props.history]"]